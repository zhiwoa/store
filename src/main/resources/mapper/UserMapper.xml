<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace:用户指定当前映射文件和哪个接口进行映射，需要指定接口的文件路径，需要完整的路径名称-->
<mapper namespace="com.demos.mapper.UserMapper">
<!-- 自定义映射规则：resultMap
     id：设置这个映射负责一个唯一的id值，对应的就是resultMap=“ id ”属性的取值
     tyep：取值是一个类，表示的是数据库中查询结果与java中哪个实体类进行结果集的映射
-->
    <resultMap id="UserEntityMap" type="com.demos.entity.User">
<!--  将表的资源不一致的字段进行匹配指定，名称一定的字段可以省略不写  主键不能省略    -->
        <result column="uid" property="uid"></result>
        <result column="is_delete" property="isDelete"></result>
        <result column="created_user" property="createdUser"></result>
        <result column="created_time " property="createdTime"></result>
        <result column="modified_user " property="modifiedUser"></result>
        <result column="modified_time " property="modifiedTime"></result>
    </resultMap>

<!--    id=表示映射的接口中方法的名称，直接在标签的内容来编写sql语句""-->
<!--    useGeneratedKeys="true"开启某个字段的值递增 keyProperty="uid" 将表中的哪个字段作为主键递增-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="uid" >
        insert into t_user(username, password, salt, phone, email, gender, avatar,
                           is_delete, created_user, created_time, modified_user, modified_time)
        values (#{username}, #{password}, #{salt}, #{phone}, #{email}, #{gender}, #{avatar},
                #{isDelete}, #{createdUser}, #{createdTime}, #{modifiedUser}, #{modifiedTime})
    </insert>

<!--select 语句在执行的时候，查询的结果是一个对象，多个对象-->
<!-- resultType  表示查询的结果集类型，只需要指定对应映射类的类型，并且包含完整的包接口， -->
    <select id="findByusername" resultMap="UserEntityMap">
        select * from t_user where username=#{username}
    </select>

    <update id="updatePasswordByUid">
        update t_user set password=#{password},
            modified_user=#{modifiedUser},modified_time=#{modifiedTime}
        where uid=#{uid}
    </update>

    <select id="findByUid" resultMap="UserEntityMap">
        select * from t_user where uid=#{uid}
    </select>

    <update id="UpdateInfoByUid">
        update t_user set
        <if test="phone != null">phone=#{phone},</if>
        <if test="email != null">email=#{email},</if>
        <if test="gender != null">gender=#{gender},</if>
                          modified_user=#{modifiedUser},
                          modified_time=#{modifiedTime}
        where uid=#{uid}
    </update>
</mapper>